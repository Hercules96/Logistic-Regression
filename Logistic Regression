{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":196262,"sourceType":"datasetVersion","datasetId":84803}],"dockerImageVersionId":30761,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-08-25T05:47:09.438968Z","iopub.execute_input":"2024-08-25T05:47:09.439407Z","iopub.status.idle":"2024-08-25T05:47:09.852546Z","shell.execute_reply.started":"2024-08-25T05:47:09.439365Z","shell.execute_reply":"2024-08-25T05:47:09.851518Z"},"trusted":true},"execution_count":1,"outputs":[{"name":"stdout","text":"/kaggle/input/bank-note-authentication-uci-data/BankNote_Authentication.csv\n","output_type":"stream"}]},{"cell_type":"code","source":"data = pd.read_csv('/kaggle/input/bank-note-authentication-uci-data/BankNote_Authentication.csv')","metadata":{"execution":{"iopub.status.busy":"2024-08-25T05:48:39.144587Z","iopub.execute_input":"2024-08-25T05:48:39.145735Z","iopub.status.idle":"2024-08-25T05:48:39.176475Z","shell.execute_reply.started":"2024-08-25T05:48:39.145691Z","shell.execute_reply":"2024-08-25T05:48:39.175260Z"},"trusted":true},"execution_count":2,"outputs":[]},{"cell_type":"code","source":"data.head()","metadata":{"execution":{"iopub.status.busy":"2024-08-25T05:48:46.357418Z","iopub.execute_input":"2024-08-25T05:48:46.358541Z","iopub.status.idle":"2024-08-25T05:48:46.379544Z","shell.execute_reply.started":"2024-08-25T05:48:46.358482Z","shell.execute_reply":"2024-08-25T05:48:46.378276Z"},"trusted":true},"execution_count":3,"outputs":[{"execution_count":3,"output_type":"execute_result","data":{"text/plain":"   variance  skewness  curtosis  entropy  class\n0   3.62160    8.6661   -2.8073 -0.44699      0\n1   4.54590    8.1674   -2.4586 -1.46210      0\n2   3.86600   -2.6383    1.9242  0.10645      0\n3   3.45660    9.5228   -4.0112 -3.59440      0\n4   0.32924   -4.4552    4.5718 -0.98880      0","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>variance</th>\n      <th>skewness</th>\n      <th>curtosis</th>\n      <th>entropy</th>\n      <th>class</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>3.62160</td>\n      <td>8.6661</td>\n      <td>-2.8073</td>\n      <td>-0.44699</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>4.54590</td>\n      <td>8.1674</td>\n      <td>-2.4586</td>\n      <td>-1.46210</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3.86600</td>\n      <td>-2.6383</td>\n      <td>1.9242</td>\n      <td>0.10645</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3.45660</td>\n      <td>9.5228</td>\n      <td>-4.0112</td>\n      <td>-3.59440</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0.32924</td>\n      <td>-4.4552</td>\n      <td>4.5718</td>\n      <td>-0.98880</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"import numpy as np\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score, confusion_matrix","metadata":{"execution":{"iopub.status.busy":"2024-08-25T05:50:16.527614Z","iopub.execute_input":"2024-08-25T05:50:16.528252Z","iopub.status.idle":"2024-08-25T05:50:16.765903Z","shell.execute_reply.started":"2024-08-25T05:50:16.528207Z","shell.execute_reply":"2024-08-25T05:50:16.764574Z"},"trusted":true},"execution_count":4,"outputs":[]},{"cell_type":"code","source":"X = data.drop(columns='class')\ny = data['class']","metadata":{"execution":{"iopub.status.busy":"2024-08-25T05:57:11.220838Z","iopub.execute_input":"2024-08-25T05:57:11.221273Z","iopub.status.idle":"2024-08-25T05:57:11.227369Z","shell.execute_reply.started":"2024-08-25T05:57:11.221234Z","shell.execute_reply":"2024-08-25T05:57:11.226156Z"},"trusted":true},"execution_count":6,"outputs":[]},{"cell_type":"code","source":"X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2,random_state=42)","metadata":{"execution":{"iopub.status.busy":"2024-08-25T05:58:07.105462Z","iopub.execute_input":"2024-08-25T05:58:07.106398Z","iopub.status.idle":"2024-08-25T05:58:07.115292Z","shell.execute_reply.started":"2024-08-25T05:58:07.106348Z","shell.execute_reply":"2024-08-25T05:58:07.114156Z"},"trusted":true},"execution_count":7,"outputs":[]},{"cell_type":"code","source":"X_train.head()","metadata":{"execution":{"iopub.status.busy":"2024-08-25T05:58:16.063541Z","iopub.execute_input":"2024-08-25T05:58:16.063960Z","iopub.status.idle":"2024-08-25T05:58:16.079437Z","shell.execute_reply.started":"2024-08-25T05:58:16.063920Z","shell.execute_reply":"2024-08-25T05:58:16.078018Z"},"trusted":true},"execution_count":8,"outputs":[{"execution_count":8,"output_type":"execute_result","data":{"text/plain":"      variance  skewness  curtosis   entropy\n529   -1.38850   12.5026   0.69118 -7.548700\n243    2.77440    6.8576  -1.06710  0.075416\n1309  -4.28870   -7.8633  11.83870 -1.897800\n664    5.35860    3.7557  -1.73450  1.078900\n745    0.75736    3.0294   2.91640 -0.068117","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>variance</th>\n      <th>skewness</th>\n      <th>curtosis</th>\n      <th>entropy</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>529</th>\n      <td>-1.38850</td>\n      <td>12.5026</td>\n      <td>0.69118</td>\n      <td>-7.548700</td>\n    </tr>\n    <tr>\n      <th>243</th>\n      <td>2.77440</td>\n      <td>6.8576</td>\n      <td>-1.06710</td>\n      <td>0.075416</td>\n    </tr>\n    <tr>\n      <th>1309</th>\n      <td>-4.28870</td>\n      <td>-7.8633</td>\n      <td>11.83870</td>\n      <td>-1.897800</td>\n    </tr>\n    <tr>\n      <th>664</th>\n      <td>5.35860</td>\n      <td>3.7557</td>\n      <td>-1.73450</td>\n      <td>1.078900</td>\n    </tr>\n    <tr>\n      <th>745</th>\n      <td>0.75736</td>\n      <td>3.0294</td>\n      <td>2.91640</td>\n      <td>-0.068117</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"y_test.value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-08-25T06:02:07.667288Z","iopub.execute_input":"2024-08-25T06:02:07.667801Z","iopub.status.idle":"2024-08-25T06:02:07.677508Z","shell.execute_reply.started":"2024-08-25T06:02:07.667751Z","shell.execute_reply":"2024-08-25T06:02:07.676101Z"},"trusted":true},"execution_count":13,"outputs":[{"execution_count":13,"output_type":"execute_result","data":{"text/plain":"class\n0    148\n1    127\nName: count, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"X_train.corr()","metadata":{"execution":{"iopub.status.busy":"2024-08-25T06:03:22.402085Z","iopub.execute_input":"2024-08-25T06:03:22.402995Z","iopub.status.idle":"2024-08-25T06:03:22.417290Z","shell.execute_reply.started":"2024-08-25T06:03:22.402946Z","shell.execute_reply":"2024-08-25T06:03:22.415927Z"},"trusted":true},"execution_count":14,"outputs":[{"execution_count":14,"output_type":"execute_result","data":{"text/plain":"          variance  skewness  curtosis   entropy\nvariance  1.000000  0.278896 -0.394404  0.266952\nskewness  0.278896  1.000000 -0.792902 -0.522045\ncurtosis -0.394404 -0.792902  1.000000  0.307843\nentropy   0.266952 -0.522045  0.307843  1.000000","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>variance</th>\n      <th>skewness</th>\n      <th>curtosis</th>\n      <th>entropy</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>variance</th>\n      <td>1.000000</td>\n      <td>0.278896</td>\n      <td>-0.394404</td>\n      <td>0.266952</td>\n    </tr>\n    <tr>\n      <th>skewness</th>\n      <td>0.278896</td>\n      <td>1.000000</td>\n      <td>-0.792902</td>\n      <td>-0.522045</td>\n    </tr>\n    <tr>\n      <th>curtosis</th>\n      <td>-0.394404</td>\n      <td>-0.792902</td>\n      <td>1.000000</td>\n      <td>0.307843</td>\n    </tr>\n    <tr>\n      <th>entropy</th>\n      <td>0.266952</td>\n      <td>-0.522045</td>\n      <td>0.307843</td>\n      <td>1.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"lr = LogisticRegression()","metadata":{"execution":{"iopub.status.busy":"2024-08-25T06:11:56.621151Z","iopub.execute_input":"2024-08-25T06:11:56.621649Z","iopub.status.idle":"2024-08-25T06:11:56.626823Z","shell.execute_reply.started":"2024-08-25T06:11:56.621609Z","shell.execute_reply":"2024-08-25T06:11:56.625674Z"},"trusted":true},"execution_count":15,"outputs":[]},{"cell_type":"code","source":"lr.fit(X_train,y_train)","metadata":{"execution":{"iopub.status.busy":"2024-08-25T06:12:37.557006Z","iopub.execute_input":"2024-08-25T06:12:37.557755Z","iopub.status.idle":"2024-08-25T06:12:37.583649Z","shell.execute_reply.started":"2024-08-25T06:12:37.557712Z","shell.execute_reply":"2024-08-25T06:12:37.582614Z"},"trusted":true},"execution_count":16,"outputs":[{"execution_count":16,"output_type":"execute_result","data":{"text/plain":"LogisticRegression()","text/html":"<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression()</pre></div></div></div></div></div>"},"metadata":{}}]},{"cell_type":"code","source":"y_pred = lr.predict(X_test)","metadata":{"execution":{"iopub.status.busy":"2024-08-25T06:15:16.695869Z","iopub.execute_input":"2024-08-25T06:15:16.696355Z","iopub.status.idle":"2024-08-25T06:15:16.703527Z","shell.execute_reply.started":"2024-08-25T06:15:16.696314Z","shell.execute_reply":"2024-08-25T06:15:16.702151Z"},"trusted":true},"execution_count":17,"outputs":[]},{"cell_type":"code","source":" accuracy_score(y_test,y_pred)","metadata":{"execution":{"iopub.status.busy":"2024-08-25T06:15:41.747850Z","iopub.execute_input":"2024-08-25T06:15:41.748387Z","iopub.status.idle":"2024-08-25T06:15:41.759530Z","shell.execute_reply.started":"2024-08-25T06:15:41.748343Z","shell.execute_reply":"2024-08-25T06:15:41.758401Z"},"trusted":true},"execution_count":18,"outputs":[{"execution_count":18,"output_type":"execute_result","data":{"text/plain":"0.9854545454545455"},"metadata":{}}]},{"cell_type":"code","source":"from sklearn.metrics import classification_report","metadata":{"execution":{"iopub.status.busy":"2024-08-25T06:17:14.246894Z","iopub.execute_input":"2024-08-25T06:17:14.248198Z","iopub.status.idle":"2024-08-25T06:17:14.253146Z","shell.execute_reply.started":"2024-08-25T06:17:14.248131Z","shell.execute_reply":"2024-08-25T06:17:14.251940Z"},"trusted":true},"execution_count":19,"outputs":[]},{"cell_type":"code","source":"print(classification_report(y_test,y_pred))","metadata":{"execution":{"iopub.status.busy":"2024-08-25T06:17:57.442788Z","iopub.execute_input":"2024-08-25T06:17:57.443843Z","iopub.status.idle":"2024-08-25T06:17:57.459119Z","shell.execute_reply.started":"2024-08-25T06:17:57.443760Z","shell.execute_reply":"2024-08-25T06:17:57.457983Z"},"trusted":true},"execution_count":21,"outputs":[{"name":"stdout","text":"              precision    recall  f1-score   support\n\n           0       0.99      0.99      0.99       148\n           1       0.98      0.98      0.98       127\n\n    accuracy                           0.99       275\n   macro avg       0.99      0.99      0.99       275\nweighted avg       0.99      0.99      0.99       275\n\n","output_type":"stream"}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}