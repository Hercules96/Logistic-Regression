{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "df4cb726",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-08-25T06:24:50.602260Z",
     "iopub.status.busy": "2024-08-25T06:24:50.601670Z",
     "iopub.status.idle": "2024-08-25T06:24:51.088882Z",
     "shell.execute_reply": "2024-08-25T06:24:51.087502Z"
    },
    "papermill": {
     "duration": 0.499554,
     "end_time": "2024-08-25T06:24:51.091713",
     "exception": false,
     "start_time": "2024-08-25T06:24:50.592159",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/bank-note-authentication-uci-data/BankNote_Authentication.csv\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "f19d18f8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-25T06:24:51.106940Z",
     "iopub.status.busy": "2024-08-25T06:24:51.105773Z",
     "iopub.status.idle": "2024-08-25T06:24:51.131102Z",
     "shell.execute_reply": "2024-08-25T06:24:51.129862Z"
    },
    "papermill": {
     "duration": 0.035896,
     "end_time": "2024-08-25T06:24:51.134106",
     "exception": false,
     "start_time": "2024-08-25T06:24:51.098210",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "data = pd.read_csv('/kaggle/input/bank-note-authentication-uci-data/BankNote_Authentication.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "57ee1cdd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-25T06:24:51.148335Z",
     "iopub.status.busy": "2024-08-25T06:24:51.147924Z",
     "iopub.status.idle": "2024-08-25T06:24:51.174963Z",
     "shell.execute_reply": "2024-08-25T06:24:51.173752Z"
    },
    "papermill": {
     "duration": 0.037284,
     "end_time": "2024-08-25T06:24:51.177730",
     "exception": false,
     "start_time": "2024-08-25T06:24:51.140446",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>variance</th>\n",
       "      <th>skewness</th>\n",
       "      <th>curtosis</th>\n",
       "      <th>entropy</th>\n",
       "      <th>class</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3.62160</td>\n",
       "      <td>8.6661</td>\n",
       "      <td>-2.8073</td>\n",
       "      <td>-0.44699</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4.54590</td>\n",
       "      <td>8.1674</td>\n",
       "      <td>-2.4586</td>\n",
       "      <td>-1.46210</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3.86600</td>\n",
       "      <td>-2.6383</td>\n",
       "      <td>1.9242</td>\n",
       "      <td>0.10645</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3.45660</td>\n",
       "      <td>9.5228</td>\n",
       "      <td>-4.0112</td>\n",
       "      <td>-3.59440</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.32924</td>\n",
       "      <td>-4.4552</td>\n",
       "      <td>4.5718</td>\n",
       "      <td>-0.98880</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   variance  skewness  curtosis  entropy  class\n",
       "0   3.62160    8.6661   -2.8073 -0.44699      0\n",
       "1   4.54590    8.1674   -2.4586 -1.46210      0\n",
       "2   3.86600   -2.6383    1.9242  0.10645      0\n",
       "3   3.45660    9.5228   -4.0112 -3.59440      0\n",
       "4   0.32924   -4.4552    4.5718 -0.98880      0"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "a4d61001",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-25T06:24:51.193018Z",
     "iopub.status.busy": "2024-08-25T06:24:51.192320Z",
     "iopub.status.idle": "2024-08-25T06:24:52.814555Z",
     "shell.execute_reply": "2024-08-25T06:24:52.813456Z"
    },
    "papermill": {
     "duration": 1.633248,
     "end_time": "2024-08-25T06:24:52.817479",
     "exception": false,
     "start_time": "2024-08-25T06:24:51.184231",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.metrics import accuracy_score, confusion_matrix"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "c2e3f785",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-25T06:24:52.832860Z",
     "iopub.status.busy": "2024-08-25T06:24:52.831746Z",
     "iopub.status.idle": "2024-08-25T06:24:52.843331Z",
     "shell.execute_reply": "2024-08-25T06:24:52.842224Z"
    },
    "papermill": {
     "duration": 0.022076,
     "end_time": "2024-08-25T06:24:52.846100",
     "exception": false,
     "start_time": "2024-08-25T06:24:52.824024",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "X = data.drop(columns='class')\n",
    "y = data['class']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "9fd35c64",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-25T06:24:52.861258Z",
     "iopub.status.busy": "2024-08-25T06:24:52.860458Z",
     "iopub.status.idle": "2024-08-25T06:24:52.870943Z",
     "shell.execute_reply": "2024-08-25T06:24:52.869956Z"
    },
    "papermill": {
     "duration": 0.021128,
     "end_time": "2024-08-25T06:24:52.873658",
     "exception": false,
     "start_time": "2024-08-25T06:24:52.852530",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2,random_state=42)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "242ce321",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-25T06:24:52.888945Z",
     "iopub.status.busy": "2024-08-25T06:24:52.888048Z",
     "iopub.status.idle": "2024-08-25T06:24:52.903933Z",
     "shell.execute_reply": "2024-08-25T06:24:52.902652Z"
    },
    "papermill": {
     "duration": 0.026108,
     "end_time": "2024-08-25T06:24:52.906263",
     "exception": false,
     "start_time": "2024-08-25T06:24:52.880155",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>variance</th>\n",
       "      <th>skewness</th>\n",
       "      <th>curtosis</th>\n",
       "      <th>entropy</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>529</th>\n",
       "      <td>-1.38850</td>\n",
       "      <td>12.5026</td>\n",
       "      <td>0.69118</td>\n",
       "      <td>-7.548700</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>243</th>\n",
       "      <td>2.77440</td>\n",
       "      <td>6.8576</td>\n",
       "      <td>-1.06710</td>\n",
       "      <td>0.075416</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1309</th>\n",
       "      <td>-4.28870</td>\n",
       "      <td>-7.8633</td>\n",
       "      <td>11.83870</td>\n",
       "      <td>-1.897800</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>664</th>\n",
       "      <td>5.35860</td>\n",
       "      <td>3.7557</td>\n",
       "      <td>-1.73450</td>\n",
       "      <td>1.078900</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>745</th>\n",
       "      <td>0.75736</td>\n",
       "      <td>3.0294</td>\n",
       "      <td>2.91640</td>\n",
       "      <td>-0.068117</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      variance  skewness  curtosis   entropy\n",
       "529   -1.38850   12.5026   0.69118 -7.548700\n",
       "243    2.77440    6.8576  -1.06710  0.075416\n",
       "1309  -4.28870   -7.8633  11.83870 -1.897800\n",
       "664    5.35860    3.7557  -1.73450  1.078900\n",
       "745    0.75736    3.0294   2.91640 -0.068117"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_train.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "30249993",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-25T06:24:52.921674Z",
     "iopub.status.busy": "2024-08-25T06:24:52.921186Z",
     "iopub.status.idle": "2024-08-25T06:24:52.938504Z",
     "shell.execute_reply": "2024-08-25T06:24:52.937282Z"
    },
    "papermill": {
     "duration": 0.02825,
     "end_time": "2024-08-25T06:24:52.941183",
     "exception": false,
     "start_time": "2024-08-25T06:24:52.912933",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "class\n",
       "0    148\n",
       "1    127\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_test.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "bfd03485",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-25T06:24:52.957562Z",
     "iopub.status.busy": "2024-08-25T06:24:52.957110Z",
     "iopub.status.idle": "2024-08-25T06:24:52.973461Z",
     "shell.execute_reply": "2024-08-25T06:24:52.972329Z"
    },
    "papermill": {
     "duration": 0.028029,
     "end_time": "2024-08-25T06:24:52.976257",
     "exception": false,
     "start_time": "2024-08-25T06:24:52.948228",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>variance</th>\n",
       "      <th>skewness</th>\n",
       "      <th>curtosis</th>\n",
       "      <th>entropy</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>variance</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.278896</td>\n",
       "      <td>-0.394404</td>\n",
       "      <td>0.266952</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>skewness</th>\n",
       "      <td>0.278896</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.792902</td>\n",
       "      <td>-0.522045</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>curtosis</th>\n",
       "      <td>-0.394404</td>\n",
       "      <td>-0.792902</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.307843</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>entropy</th>\n",
       "      <td>0.266952</td>\n",
       "      <td>-0.522045</td>\n",
       "      <td>0.307843</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          variance  skewness  curtosis   entropy\n",
       "variance  1.000000  0.278896 -0.394404  0.266952\n",
       "skewness  0.278896  1.000000 -0.792902 -0.522045\n",
       "curtosis -0.394404 -0.792902  1.000000  0.307843\n",
       "entropy   0.266952 -0.522045  0.307843  1.000000"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_train.corr()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "2895d7d2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-25T06:24:52.992324Z",
     "iopub.status.busy": "2024-08-25T06:24:52.991870Z",
     "iopub.status.idle": "2024-08-25T06:24:52.997650Z",
     "shell.execute_reply": "2024-08-25T06:24:52.996447Z"
    },
    "papermill": {
     "duration": 0.016889,
     "end_time": "2024-08-25T06:24:53.000299",
     "exception": false,
     "start_time": "2024-08-25T06:24:52.983410",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "lr = LogisticRegression()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "88d78c18",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-25T06:24:53.016303Z",
     "iopub.status.busy": "2024-08-25T06:24:53.015843Z",
     "iopub.status.idle": "2024-08-25T06:24:53.044026Z",
     "shell.execute_reply": "2024-08-25T06:24:53.042695Z"
    },
    "papermill": {
     "duration": 0.039512,
     "end_time": "2024-08-25T06:24:53.046870",
     "exception": false,
     "start_time": "2024-08-25T06:24:53.007358",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression()</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "LogisticRegression()"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "lr.fit(X_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "2398f7d6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-25T06:24:53.064675Z",
     "iopub.status.busy": "2024-08-25T06:24:53.063585Z",
     "iopub.status.idle": "2024-08-25T06:24:53.071122Z",
     "shell.execute_reply": "2024-08-25T06:24:53.069837Z"
    },
    "papermill": {
     "duration": 0.019658,
     "end_time": "2024-08-25T06:24:53.073859",
     "exception": false,
     "start_time": "2024-08-25T06:24:53.054201",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "y_pred = lr.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "0d1b12a6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-25T06:24:53.090109Z",
     "iopub.status.busy": "2024-08-25T06:24:53.089701Z",
     "iopub.status.idle": "2024-08-25T06:24:53.100333Z",
     "shell.execute_reply": "2024-08-25T06:24:53.099130Z"
    },
    "papermill": {
     "duration": 0.021863,
     "end_time": "2024-08-25T06:24:53.102966",
     "exception": false,
     "start_time": "2024-08-25T06:24:53.081103",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.9854545454545455"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    " accuracy_score(y_test,y_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "1d5e6254",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-25T06:24:53.120280Z",
     "iopub.status.busy": "2024-08-25T06:24:53.119199Z",
     "iopub.status.idle": "2024-08-25T06:24:53.124680Z",
     "shell.execute_reply": "2024-08-25T06:24:53.123551Z"
    },
    "papermill": {
     "duration": 0.01663,
     "end_time": "2024-08-25T06:24:53.127130",
     "exception": false,
     "start_time": "2024-08-25T06:24:53.110500",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.metrics import classification_report"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "a587c794",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-25T06:24:53.144148Z",
     "iopub.status.busy": "2024-08-25T06:24:53.143373Z",
     "iopub.status.idle": "2024-08-25T06:24:53.160742Z",
     "shell.execute_reply": "2024-08-25T06:24:53.159418Z"
    },
    "papermill": {
     "duration": 0.028778,
     "end_time": "2024-08-25T06:24:53.163383",
     "exception": false,
     "start_time": "2024-08-25T06:24:53.134605",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.99      0.99      0.99       148\n",
      "           1       0.98      0.98      0.98       127\n",
      "\n",
      "    accuracy                           0.99       275\n",
      "   macro avg       0.99      0.99      0.99       275\n",
      "weighted avg       0.99      0.99      0.99       275\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(classification_report(y_test,y_pred))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d0869a4e",
   "metadata": {
    "papermill": {
     "duration": 0.007327,
     "end_time": "2024-08-25T06:24:53.178201",
     "exception": false,
     "start_time": "2024-08-25T06:24:53.170874",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 84803,
     "sourceId": 196262,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30761,
   "isGpuEnabled": false,
   "isInternetEnabled": false,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.14"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 6.280706,
   "end_time": "2024-08-25T06:24:53.808311",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-08-25T06:24:47.527605",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
